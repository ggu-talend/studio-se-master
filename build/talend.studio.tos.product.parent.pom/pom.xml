<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.talend.studio</groupId>
		<artifactId>parent-pom</artifactId>
		<version>6.0.0-SNAPSHOT</version>
		<relativePath></relativePath>
	</parent>

	<artifactId>tos-products-parent-pom</artifactId>
	<packaging>pom</packaging>

	<repositories>
		<repository>
			<id>talend_open</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>http://newbuild.talend.com:8081/nexus/content/repositories/TalendOpenSourceRelease/</url>
		</repository>
		<repository>
			<id>talend_open_snapshots</id>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://newbuild.talend.com:8081/nexus/content/repositories/TalendOpenSourceSnapshot/</url>
		</repository>
	</repositories>

	<properties>
		<product.final.name>${launcher.prefix}-${product.timestamp}-V${unqualifiedVersion}${revision.filename}</product.final.name>
		<studio.dir>${project.build.directory}/products/${project.artifactId}/${osgi.ws}/${osgi.os}/${osgi.arch}</studio.dir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<id>read-product-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.basedir}/product.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>      
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<id>materialize-products</id>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<products>
						<product>
							<!--We need to specify this product otherwise on Mac the build fails because of a .DS_Store found at the same level that the prodcut make the build fail.-->
							<id>${project.artifactId}</id>
						</product>
					</products>
				</configuration>        
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<!-- Unzip Eclipse artifacts -->
					<execution>
						<id>unpack-binaries</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>eclipse-launcher-binaries</artifactId>
									<version>3.6.1</version>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${studio.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>tos-about-files</artifactId>
									<version>3.6.1</version>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${studio.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>eclipse-delta-pack</artifactId>
									<version>3.6.1</version>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${studio.dir}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-license-txt</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${product.branding.platform}</artifactId>
									<version>${project.version}</version>
									<type>license</type>
									<overWrite>true</overWrite>
									<outputDirectory>${studio.dir}</outputDirectory>
									<destFileName>license.txt</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<!-- Copy config.ini into configuration dir -->
					<execution>
						<id>copy-config-ini</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>config.ini</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${studio.dir}/configuration</outputDirectory>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
					<!-- Copy .eclipseproduct into product root -->
					<execution>
						<id>copy-eclipseproduct</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>.eclipseproduct</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${studio.dir}</outputDirectory>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>generate-javajet</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<workingDirectory>${studio.dir}</workingDirectory>
					<arguments>
						<argument>-Xmx256m</argument>
						<argument>-XX:MaxPermSize=256m</argument>
						<argument>-classpath</argument>
						<argument>${studio.dir}/plugins/${equinox.build}</argument>
						<argument>org.eclipse.core.launcher.Main</argument>
						<argument>-application</argument>
						<argument>org.talend.designer.codegen.CodeGenInit</argument>
						<argument>-nosplash</argument>
						<argument>-consoleLog</argument>
						<argument>-Dtalend.licence.path=${studio.dir}/license</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<!-- Set property product.timestamp if not already set -->
						<id>set-product-timestamp</id>
						<phase>initialize</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
								<if>
									<not><isset property="product.timestamp" /></not>
									<then>
										<propertyregex property="product.timestamp" input="${buildQualifier}" regexp="^([0-9_]{13})(.*)" select="\1" casesensitive="false" />
									</then>
								</if>
								<echo>product.timestamp = ${product.timestamp}</echo>
								<property name="version.full" value="${unqualifiedVersion}.${product.timestamp}${release.suffix}" />
								<echo>version.full = ${version.full}</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<!-- Replace properties in branding plugin about.mappings file -->
						<id>replace-about-mappings-properties</id>
						<phase>package</phase>
						<configuration>
							<target>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
								<echo>Looking for ${studio.dir}/plugins/${product.branding.platform}_${unqualifiedVersion}*</echo>
								<echo>product.timestamp=${product.timestamp}</echo>
								<echo>version.full=${version.full}</echo>
								<fileset dir="${studio.dir}/plugins" includes="${product.branding.platform}_${unqualifiedVersion}*/about.mappings" id="aboutmappingspath_temp" />
								<pathconvert property="aboutmappingspath" refid="aboutmappingspath_temp" />	
								<echo>aboutmappingspath=${aboutmappingspath}</echo>
								<loadfile property="about" srcFile="${aboutmappingspath}">
									<filterchain>
										<expandproperties/>
									</filterchain>
								</loadfile>
								<echo file="${aboutmappingspath}">${about}</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<!-- Unzip launchers and prepare ini files from templates -->
						<id>copy-launchers</id>
						<phase>package</phase>
						<configuration>
							<target>
								<echo>version.full=${version.full}</echo>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
								<move file="${studio.dir}/launcher-macosx-cocoa.app" tofile="${studio.dir}/${launcher.prefix}-macosx-cocoa.app"/>
								<move todir="${studio.dir}">
									<fileset dir="${studio.dir}">
										<include name="**/Contents/MacOS/*" />
										<include name="*" />
									</fileset>
									<dirset dir="${studio.dir}">
										<include name="*"/>
									</dirset>
									<mapper>
										<mapper type="regexp"
											from="(.*)launcher(.*)" to="\1${launcher.prefix}\2" />
									</mapper>
								</move>
								<loadfile property="launcher_sh" srcFile="${studio.dir}/${launcher.prefix}-linux-gtk-x86.sh">
									<filterchain>
										<expandproperties/>
									</filterchain>
								</loadfile>
								<echo file="${studio.dir}/${launcher.prefix}-linux-gtk-x86.sh">${launcher_sh}</echo>
								<ac:for list="linux-gtk-ppc,linux-gtk-x86,solaris-gtk,solaris-gtk-x86,win32-wpf,win32-x86" param="platform" xmlns:ac="antlib:net.sf.antcontrib">
									<sequential>
										<copy tofile="${studio.dir}/${launcher.prefix}-@{platform}.ini" file="${project.basedir}/launcher.ini" />
									</sequential>
								</ac:for>
								<ac:for list="linux-gtk-x86_64,win-x86_64" param="platform" xmlns:ac="antlib:net.sf.antcontrib">
									<sequential>
										<copy tofile="${studio.dir}/${launcher.prefix}-@{platform}.ini" file="${project.basedir}/launcher_64.ini" />
									</sequential>
								</ac:for>
								<copy tofile="${studio.dir}/${launcher.prefix}-macosx-cocoa.app/Contents/MacOS/${launcher.prefix}-macosx-cocoa.ini" file="${project.basedir}/launcher_macosx.ini" />
								<property name="launcher.name" value="${product.name}" />
								<property name="launcher.info" value="${mac.launcher.info}" />
								<loadfile property="plist" srcFile="${studio.dir}/${launcher.prefix}-macosx-cocoa.app/Contents/Info.plist">
									<filterchain>
										<expandproperties/>
									</filterchain>
								</loadfile>
								<echo file="${studio.dir}/${launcher.prefix}-macosx-cocoa.app/Contents/Info.plist">${plist}</echo>
								<chmod dir="${studio.dir}" perm="755" includes="${launcher.prefix}*" verbose="true" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<!-- Generated file artifacts.xml is currently unused, delete manually -->
						<id>delete-p2-build-generated-files</id>
						<phase>package</phase>
						<configuration>
							<target>
								<delete>
									<fileset dir="${studio.dir}">
										<include name="artifacts.xml" />
									</fileset>
								</delete>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>delete-eclipse-launch-generated-files</id>
						<phase>package</phase>
						<configuration>
							<target>
								<delete dir="${studio.dir}/lib" includeemptydirs="true" />
								<delete dir="${studio.dir}/temp" includeemptydirs="true" />
								<delete dir="${studio.dir}/workspace/.Java" includeemptydirs="true" />
								<delete dir="${studio.dir}/workspace/.Perl" includeemptydirs="true" />
								<delete dir="${studio.dir}/workspace/.metadata" includeemptydirs="true" />
								<delete dir="${studio.dir}/configuration/org.eclipse.core.runtime" includeemptydirs="true" />
								<delete dir="${studio.dir}/configuration/org.eclipse.equinox.app" includeemptydirs="true" />
								<delete dir="${studio.dir}/configuration/org.eclipse.osgi" includeemptydirs="true" />
								<delete dir="${studio.dir}/configuration/org.eclipse.update" includeemptydirs="true" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<!-- Create final product ZIP -->
						<id>zip-product</id>
						<phase>package</phase>
						<configuration>
							<target>
								<echo>product.timestamp = ${product.timestamp}</echo>
								<move file="${studio.dir}" tofile="${studio.dir}/../${product.final.name}" />
								<zip destfile="${project.build.directory}/products/${product.final.name}.zip">
									<zipfileset filemode="755" dir="${studio.dir}/..">
										<include name="${product.final.name}/**/**" />
									</zipfileset>
								</zip>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>nonofficial</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<strictBinIncludes>false</strictBinIncludes>
							<format>yyyyMMdd'_'HHmm'${release.suffix}'</format>
							<archive>
								<addMavenDescriptor>false</addMavenDescriptor>
								<!-- By default, name of the current user is inserted into generated MANIFEST.MF files -->
								<manifestEntries>
									<Built-By></Built-By>
								</manifestEntries>
							</archive>
							<timestampProvider>default</timestampProvider>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>official</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<strictBinIncludes>false</strictBinIncludes>
							<format>'${product.timestamp}${release.suffix}'</format>
							<archive>
								<addMavenDescriptor>false</addMavenDescriptor>
								<!-- By default, name of the current user is inserted into generated MANIFEST.MF files -->
								<manifestEntries>
									<Built-By></Built-By>
								</manifestEntries>
							</archive>
							<timestampProvider>default</timestampProvider>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<!-- Attach product ZIP to Maven artifact -->
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/products/${product.final.name}.zip</file>
											<type>product</type>                           
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<!-- Copy build to products directory -->
								<id>move-build-to-products</id>
								<phase>install</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
										<propertyregex property="product.version.short" input="${unqualifiedVersion}" regexp="\." replace="" global="true" casesensitive="false" override="true" />
										<property name="product.build.path" value="${product.build.id}/${storage.dir}/V${unqualifiedVersion}${revision.filename}/${storage.dir}_${product.version.short}" />
										<property name="product.dir" value="${storage}/${product.build.path}" />
										<mkdir dir="${product.dir}" />
										<echo>Moving product ZIP ${project.build.directory}/products/${product.final.name}.zip to ${product.dir}</echo>
										<move todir="${product.dir}" file="${project.build.directory}/products/${product.final.name}.zip" />
										<if>
											<and>
												<equals arg1="${env.HUDSON_URL}" arg2="http://newbuild.talend.com:8180/" />
												<equals arg1="${automaticnb}" arg2="1" />
											</and>
											<then>
												<echo file="${storage}/lastnb.txt" append="true">http://newbuild.talend.com/builds/${product.build.path}/${product.final.name}.zip${line.separator}</echo>
											</then>
										</if>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.8.1</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project> 